name: Check Staging Sync

on:
  push:
    branches:
      - staging

jobs:
  check-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Get Repository Info
        id: repo_info
        run: echo "repo=${{ github.repository }}" >> $GITHUB_ENV

      - name: Check if dev is behind staging
        id: compare
        run: |

          BASE_COMMIT=$(curl -s "https://api.github.com/repos/${{ env.repo }}/branches/dev" | jq -r '.commit.sha')
          HEAD_COMMIT=$(curl -s "https://api.github.com/repos/${{ env.repo }}/branches/staging" | jq -r '.commit.sha')

          COMPARE_URL="https://api.github.com/repos/${{ env.repo }}/compare/$BASE_COMMIT...$HEAD_COMMIT?expand=1"
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $COMPARE_URL)

          echo "API RESPONSE: $RESPONSE"  # Debugging step

          CHANGES=$(echo "$RESPONSE" | jq '.files | length')  # Handle null case

          if [ "$CHANGES" -gt 0 ]; then
            USER_NAME=$(echo "$RESPONSE" | jq -r '.commits[-1].author.login')
            USER_EMAIL=$(echo "$RESPONSE" | jq -r '.commits[-1].author.email')

            echo "STAGING_AHEAD=true" >> $GITHUB_ENV
            echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV
            echo "USER_EMAIL=$USER_EMAIL" >> $GITHUB_ENV

            echo "ðŸš¨ staging has changes that are not in dev!"

            echo "USER_NAME: $USER_NAME"
            echo "USER_EMAIL: $USER_EMAIL"

           
          else
            echo "STAGING_AHEAD=false" >> $GITHUB_ENV
            echo "âœ… staging and dev are in sync."
          fi
      - name: Send Slack Notification
        if: env.STAGING_AHEAD == 'true'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="ðŸš¨ *ALERT:* \`staging\` branch has changes that are not in \`dev\`. Please merge them!"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" $SLACK_WEBHOOK_URL
          